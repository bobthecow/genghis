# we're exploiting the promise that there's "at least one version of Ruby available"...
language: php

cache:
 - bundler

php:
 - 5.4
 - 5.5
 - 5.6
# - hhvm

env:
 - GENGHIS_BACKEND=php
 - GENGHIS_BACKEND=php_dev

matrix:
  include:
    # We only need to test the Ruby backend(s) on one PHP version.
    - php: 5.5
      env: GENGHIS_BACKEND=ruby
    - php: 5.5
      env: GENGHIS_BACKEND=ruby_dev

    # Let's test a bunch of driver versions under PHP 5.5 as well.
    - php: 5.5
      env: GENGHIS_BACKEND=php_dev MONGO_PHP_VERSION=1.1.4
    - php: 5.5
      env: GENGHIS_BACKEND=php_dev MONGO_PHP_VERSION=1.2.12
    - php: 5.5
      env: GENGHIS_BACKEND=php_dev MONGO_PHP_VERSION=1.3.0
    - php: 5.5
      env: GENGHIS_BACKEND=php_dev MONGO_PHP_VERSION=1.3.4
    - php: 5.5
      env: GENGHIS_BACKEND=php_dev MONGO_PHP_VERSION=1.3.7
    - php: 5.5
      env: GENGHIS_BACKEND=php_dev MONGO_PHP_VERSION=1.4.0
    - php: 5.5
      env: GENGHIS_BACKEND=php_dev MONGO_PHP_VERSION=1.4.3

  allow_failures:
    - php: 5.6 # $_POST is deprecated :-/

services: mongodb

before_install:
 - 'sh -c "if [ ! -z $MONGO_PHP_VERSION ]; then pecl install -f mongo-${MONGO_PHP_VERSION}; fi"'
 - 'sh -c "if [ -z $(php -i | grep mongo) ]; then echo extension=mongo.so >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini; fi"'

install:
 - bundle install --without development
 - 'sh -c "if [ $GENGHIS_BACKEND = ruby ] || [ $GENGHIS_BACKEND = php ]; then npm install; fi"'

before_script:
 - 'sh -c "if [ $GENGHIS_BACKEND = ruby ] || [ $GENGHIS_BACKEND = php ]; then gulp rebuild; fi"'

script: rspec
